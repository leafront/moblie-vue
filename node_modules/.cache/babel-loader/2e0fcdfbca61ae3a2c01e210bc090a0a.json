{"remainingRequest":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/thread-loader/dist/cjs.js!/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/babel-loader/lib/index.js!/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/libs/request.js","dependencies":[{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/libs/request.js","mtime":1551358312268},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/cache-loader/dist/cjs.js","mtime":1551093967131},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/thread-loader/dist/cjs.js","mtime":1551093972817},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/babel-loader/lib/index.js","mtime":1551093966843},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/eslint-loader/index.js","mtime":1551093968958}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { jsCookie } from '@/libs/auth';\nimport util from '@/libs/util'; // 创建axios实例\n\nvar service = axios.create({\n  baseURL: 'ximai/',\n  // util.ajax.baseURL, // api的base_url\n  timeout: 50000,\n  // 请求超时时间\n  contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n  responseType: 'json',\n  withCredentials: false // 是否允许带cookie这些\n\n}); //service.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n// respone拦截器\n\nservice.interceptors.response.use(function (response) {\n  /**\n   * 通过response自定义code来标示请求状态\n   * code为非20000是抛错 可结合自己业务进行修改\n   */\n  var res = response;\n\n  if (res.status !== 200) {\n    // 50008:非法的token; 50012:其他客户端登录了;  50014:Token 过期了;\n    // if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n    //     iView.Notice.info('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\n    //         confirmButtonText: '重新登录',\n    //         cancelButtonText: '取消',\n    //         type: 'warning'\n    //     }).then(() => {\n    //         store.dispatch('LogOut').then(() => {\n    //             location.reload(); // 为了重新实例化vue-router对象 避免bug\n    //         });\n    //     });\n    // }\n    // eslint-disable-next-line\n    return Promise.reject('error');\n  } else {\n    return response.data;\n  }\n}, function (error) {\n  return Promise.reject(error ? error : '请求为成功');\n});\nexport default service;",{"version":3,"sources":["/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/libs/request.js"],"names":["axios","jsCookie","util","service","create","baseURL","timeout","contentType","responseType","withCredentials","interceptors","response","use","res","status","Promise","reject","data","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,aAAjB,C,CAEA;;AACA,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;AACzBC,EAAAA,OAAO,EACH,QAFqB;AAGzB;AACAC,EAAAA,OAAO,EAAE,KAJgB;AAIT;AAChBC,EAAAA,WAAW,EAAE,kDALY;AAMzBC,EAAAA,YAAY,EAAE,MANW;AAOzBC,EAAAA,eAAe,EAAE,KAPQ,CAOF;;AAPE,CAAb,CAAhB,C,CASA;AAEA;;AACAN,OAAO,CAACO,YAAR,CAAqBC,QAArB,CAA8BC,GAA9B,CACI,UAAAD,QAAQ,EAAI;AACR;;;;AAIA,MAAME,GAAG,GAAGF,QAAZ;;AACA,MAAIE,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAOC,OAAO,CAACC,MAAR,CAAe,OAAf,CAAP;AACH,GAfD,MAeO;AACH,WAAOL,QAAQ,CAACM,IAAhB;AACH;AACJ,CAzBL,EA0BI,UAAAC,KAAK,EAAI;AACL,SAAOH,OAAO,CAACC,MAAR,CAAeE,KAAK,GAAGA,KAAH,GAAW,OAA/B,CAAP;AACH,CA5BL;AA+BA,eAAef,OAAf","sourcesContent":["import axios from 'axios';\nimport {jsCookie} from '@/libs/auth';\nimport util from '@/libs/util';\n\n// 创建axios实例\nconst service = axios.create({\n    baseURL:\n        'ximai/',\n    // util.ajax.baseURL, // api的base_url\n    timeout: 50000, // 请求超时时间\n    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n    responseType: 'json',\n    withCredentials: false // 是否允许带cookie这些\n});\n//service.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';\n\n// respone拦截器\nservice.interceptors.response.use(\n    response => {\n        /**\n         * 通过response自定义code来标示请求状态\n         * code为非20000是抛错 可结合自己业务进行修改\n         */\n        const res = response;\n        if (res.status !== 200) {\n            // 50008:非法的token; 50012:其他客户端登录了;  50014:Token 过期了;\n            // if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n            //     iView.Notice.info('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\n            //         confirmButtonText: '重新登录',\n            //         cancelButtonText: '取消',\n            //         type: 'warning'\n            //     }).then(() => {\n            //         store.dispatch('LogOut').then(() => {\n            //             location.reload(); // 为了重新实例化vue-router对象 避免bug\n            //         });\n            //     });\n            // }\n            // eslint-disable-next-line\n            return Promise.reject('error');\n        } else {\n            return response.data;\n        }\n    },\n    error => {\n        return Promise.reject(error ? error : '请求为成功');\n    }\n);\n\nexport default service;\n"]}]}