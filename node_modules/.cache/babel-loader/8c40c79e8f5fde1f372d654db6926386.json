{"remainingRequest":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/thread-loader/dist/cjs.js!/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/babel-loader/lib/index.js!/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/view/set/password-modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/view/set/password-modify.vue","mtime":1552325558407},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/cache-loader/dist/cjs.js","mtime":1551093967131},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/thread-loader/dist/cjs.js","mtime":1551093972817},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/babel-loader/lib/index.js","mtime":1551093966843},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/cache-loader/dist/cjs.js","mtime":1551093967131},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/vue-loader/lib/index.js","mtime":1551093973497}],"contextDependencies":[],"result":["import \"vant/es/toast/style\";\nimport _Toast from \"vant/es/toast\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport storeData from './store/password-modify';\nimport ajax from '@/api/set';\nimport RSA from '@/libs/RSA';\nimport ajaxRSA from '@/api/login';\nimport { validaNumberCharacter } from '@/libs/validate';\nexport default {\n  data: function data() {\n    return Object.assign(storeData.call(this), {\n      oldShow: false,\n      newShow: false,\n      againShow: false,\n      keyPair: '',\n      btnStatus: true\n    });\n  },\n  created: function created() {\n    this.getTokenFetch();\n  },\n  watch: {\n    'password.old': function passwordOld(val, old) {\n      if (val) {\n        this.submitRule[0] = 1;\n\n        if (this.password.new && this.password.again) {\n          this.submitStatus = true;\n        } else {\n          this.submitStatus = false;\n        }\n      } else {\n        this.submitRule[0] = 0;\n        this.submitStatus = false;\n      }\n\n      if (val !== old) {\n        this.submitInputStatus[0] = 1;\n        this.submitInputStatus[1] = 0;\n        this.submitInputStatus[2] = 0;\n      } else {\n        this.submitInputStatus[0] = 0;\n      }\n    },\n    'password.new': function passwordNew(val, old) {\n      if (val) {\n        this.submitRule[1] = 1;\n\n        if (this.password.old && this.password.again) {\n          this.submitStatus = true;\n        } else {\n          this.submitStatus = false;\n        }\n\n        if (!validaNumberCharacter(val)) {\n          _Toast('新密码只能为数字和字母');\n\n          this.btnStatus = false;\n          return;\n        }\n\n        if (this.password.new && this.password.old && validaNumberCharacter(this.password.new)) {\n          this.btnStatus = true;\n        } else {\n          this.btnStatus = false;\n        }\n      } else {\n        this.submitRule[1] = 0;\n        this.submitStatus = false;\n      }\n\n      if (val !== old) {\n        this.submitInputStatus[0] = 0;\n        this.submitInputStatus[1] = 1;\n        this.submitInputStatus[2] = 0;\n      } else {\n        this.submitInputStatus[1] = 0;\n      }\n    },\n    'password.again': function passwordAgain(val, old) {\n      if (val) {\n        this.submitRule[2] = 1;\n\n        if (this.password.old && this.password.new) {\n          this.submitStatus = true;\n        } else {\n          this.submitStatus = false;\n        }\n\n        if (this.password.new.length === 0) {\n          this.password.again = '';\n\n          _Toast('请先填写新的登录密码');\n\n          return;\n        }\n\n        if (this.password.old.length === 0) {\n          this.password.again = '';\n\n          _Toast('请先填写旧的登录密码');\n\n          return;\n        }\n\n        if (this.password.new && this.password.old && validaNumberCharacter(this.password.new)) {\n          this.btnStatus = true;\n        } else {\n          this.btnStatus = false;\n        }\n      } else {\n        this.submitRule[2] = 0;\n        this.submitStatus = false;\n      }\n\n      if (val !== old) {\n        this.submitInputStatus[0] = 0;\n        this.submitInputStatus[1] = 0;\n        this.submitInputStatus[2] = 1;\n      } else {\n        this.submitInputStatus[2] = 0;\n      }\n    }\n  },\n  methods: {\n    showHandle: function showHandle(item) {\n      this[item + 'Show'] = !this[item + 'Show'];\n    },\n    getTokenFetch: function getTokenFetch() {\n      var _this = this;\n\n      ajaxRSA.getToken({\n        _: new Date().getTime()\n      }).then(function (response) {\n        if (!response.success === true) {\n          return;\n        }\n\n        var res = response.data;\n        var keyPair = RSA.getKeyPair(res.exponent, '', res.modulus);\n        _this.keyPair = keyPair;\n      }).catch(function () {});\n    },\n    submitAction: function submitAction() {\n      if (this.submitRule.join() === '1,1,1') {\n        this.submitStatus = true;\n        this.submitRuleTextStatus = false;\n        console.log(this.password.new.length);\n\n        if (this.password.new.length < 8) {\n          _Toast('新密码长度为8到20位');\n\n          this.btnStatus = false;\n          return;\n        } else if (this.password.new !== this.password.again) {\n          _Toast('新密码和确认密码不一致，请确定');\n\n          this.btnStatus = false;\n          return;\n        } else if (!validaNumberCharacter(this.password.new)) {\n          _Toast('新密码只能为数字和字母');\n\n          this.btnStatus = false;\n          return;\n        } else {\n          this.btnStatus = true;\n          this.submitFetch();\n        }\n      } else {\n        this.submitStatus = false;\n        this.btnStatus = false;\n        this.submitRuleTextStatus = true;\n      }\n    },\n    submitFetch: function submitFetch() {\n      var _this2 = this;\n\n      ajax.modPassword({\n        oldPwd: RSA.encryptedString(this.keyPair, this.password.old),\n        newPwd: RSA.encryptedString(this.keyPair, this.password.new)\n      }).then(function (response) {\n        if (!response.success === true) {\n          Dialog.confirm({\n            title: response.msg || '修改密码失败',\n            message: ''\n          }).then(function () {}).catch(function () {});\n          return;\n        } else {\n          if (response.data.success) {\n            if (_this2.userName) {\n              localStorage.setItem('userNameLast', _this2.userName);\n            } else {\n              localStorage.setItem('userNameLast', '');\n            }\n\n            setTimeout(function () {\n              _this2.$router.push({\n                name: 'passwordModifySuccess'\n              });\n            }, 800);\n          } else {\n            _Toast(response.msg || '修改密码失败');\n          }\n        }\n      }).catch(function () {});\n    },\n    navBackClick: function navBackClick() {\n      var _this3 = this;\n\n      setTimeout(function () {\n        _this3.$router.push({\n          name: 'set'\n        });\n      }, 800);\n    }\n  }\n};",{"version":3,"sources":["password-modify.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <van-nav-bar\n                class=\"bar-wrapper\"\n                :title=\"this.$route.meta.title\"\n                left-arrow\n                :z-index=\"999\"\n                @click-left=\"navBackClick\"\n        />\n        <div class=\"set_password-wrapper container-wrapper\">\n\n            <div class=\"item\" :class=\"this.submitInputStatus[0] === 1 ? 'bB1' : ''\">\n                <input v-model=\"password.old\"\n                       class=\"item-input\"\n                       maxlength=\"20\"\n                       :type=\"this.oldShow ? 'text': 'password'\"\n                       placeholder=\"请输入原密码\"/>\n                <i class=\"icon-eye\"\n                   v-if=\"password.old\"\n                   @click=\"showHandle('old')\"\n                   :class=\"this.oldShow ? 'icon-eye_open':''\"></i>\n                <p class=\"item-notice\" v-show=\"this.submitRule[0] === 0 && this.submitRuleTextStatus === true\">不能为空</p>\n            </div>\n\n            <div class=\"item mt16\" :class=\"this.submitInputStatus[1] === 1 ? 'bB1' : ''\">\n                <input v-model=\"password.new\"\n                       class=\"item-input\"\n                       :type=\"this.newShow ? 'text': 'password'\"\n                       maxlength=\"20\"\n                       placeholder=\"请输入新的登录密码\"/>\n                <i class=\"icon-eye\"\n                   v-if=\"password.new\"\n                   @click=\"showHandle('new')\"\n                   :class=\"this.newShow ? 'icon-eye_open':''\"\n                ></i>\n                <p class=\"item-notice\" v-show=\"this.submitRule[1] === 0 && this.submitRuleTextStatus === true\">不能为空</p>\n            </div>\n\n            <div class=\"item mt16\" :class=\"this.submitInputStatus[2] === 1 ? 'bB1' : ''\">\n                <input v-model=\"password.again\"\n                       class=\"item-input\"\n                       maxlength=\"20\"\n                       :type=\"this.againShow ? 'text': 'password'\"\n                       placeholder=\"请再次输入新的登录密码\"/>\n                <i class=\"icon-eye\"\n                   v-if=\"password.again\"\n                   @click=\"showHandle('again')\"\n                   :class=\"this.againShow ? 'icon-eye_open':''\"\n                ></i>\n                <p class=\"item-notice\" v-show=\"this.submitRule[2] === 0 && this.submitRuleTextStatus === true\">不能为空</p>\n            </div>\n\n            <button\n                    class=\"\n                         btn\n                         btn-block\n                         btn-primary\n                         mt27\"\n                    :class=\"this.btnStatus ? '' : 'btn-disabled'\"\n                    @click=\"submitAction()\"\n            >提交\n            </button>\n        </div>\n    </div>\n</template>\n\n<script>\n    import storeData from './store/password-modify';\n    import ajax from '@/api/set';\n    import RSA from '@/libs/RSA';\n    import ajaxRSA from '@/api/login';\n    import {validaNumberCharacter} from '@/libs/validate';\n    import {\n        Toast,\n    } from 'vant';\n\n    export default {\n        data() {\n            return Object.assign(storeData.call(this), {\n                oldShow: false,\n                newShow: false,\n                againShow: false,\n                keyPair: '',\n                btnStatus: true\n            });\n        },\n        created() {\n            this.getTokenFetch();\n        },\n        watch: {\n            'password.old': function (val, old) {\n                if (val) {\n                    this.submitRule[0] = 1;\n                    if (this.password.new && this.password.again) {\n                        this.submitStatus = true;\n                    } else {\n                        this.submitStatus = false;\n                    }\n                } else {\n                    this.submitRule[0] = 0;\n                    this.submitStatus = false;\n                }\n                if (val !== old) {\n                    this.submitInputStatus[0] = 1;\n                    this.submitInputStatus[1] = 0;\n                    this.submitInputStatus[2] = 0;\n                } else {\n                    this.submitInputStatus[0] = 0;\n                }\n            },\n            'password.new': function (val, old) {\n                if (val) {\n                    this.submitRule[1] = 1;\n                    if (this.password.old && this.password.again) {\n                        this.submitStatus = true;\n                    } else {\n                        this.submitStatus = false;\n                    }\n\n                    if (!validaNumberCharacter(val)) {\n                        Toast('新密码只能为数字和字母');\n                        this.btnStatus = false;\n                        return;\n                    }\n\n                    if (this.password.new && this.password.old &&\n                        validaNumberCharacter(this.password.new)) {\n                        this.btnStatus = true;\n                    } else {\n                        this.btnStatus = false;\n                    }\n\n                } else {\n                    this.submitRule[1] = 0;\n                    this.submitStatus = false;\n                }\n                if (val !== old) {\n                    this.submitInputStatus[0] = 0;\n                    this.submitInputStatus[1] = 1;\n                    this.submitInputStatus[2] = 0;\n                } else {\n                    this.submitInputStatus[1] = 0;\n                }\n            },\n            'password.again': function (val, old) {\n                if (val) {\n                    this.submitRule[2] = 1;\n                    if (this.password.old && this.password.new) {\n                        this.submitStatus = true;\n                    } else {\n                        this.submitStatus = false;\n                    }\n\n                    if (this.password.new.length === 0) {\n                        this.password.again = '';\n                        Toast('请先填写新的登录密码');\n                        return;\n                    }\n                    if (this.password.old.length === 0) {\n                        this.password.again = '';\n                        Toast('请先填写旧的登录密码');\n                        return;\n                    }\n\n                    if (this.password.new && this.password.old &&\n                        validaNumberCharacter(this.password.new) ) {\n                        this.btnStatus = true;\n                    } else {\n                        this.btnStatus = false;\n                    }\n\n                } else {\n                    this.submitRule[2] = 0;\n                    this.submitStatus = false;\n                }\n                if (val !== old) {\n                    this.submitInputStatus[0] = 0;\n                    this.submitInputStatus[1] = 0;\n                    this.submitInputStatus[2] = 1;\n                } else {\n                    this.submitInputStatus[2] = 0;\n                }\n            }\n        },\n        methods: {\n            showHandle(item) {\n                this[item + 'Show'] = !this[item + 'Show'];\n            },\n            getTokenFetch() {\n                ajaxRSA.getToken({\n                    _: new Date().getTime()\n                }).then(response => {\n                    if (!response.success === true) {\n                        return;\n                    }\n                    let res = response.data;\n                    const keyPair = RSA.getKeyPair(\n                        res.exponent, '', res.modulus\n                    );\n                    this.keyPair = keyPair;\n                }).catch(() => {\n                });\n            },\n            submitAction() {\n                if (this.submitRule.join() === '1,1,1') {\n\n                    this.submitStatus = true;\n                    this.submitRuleTextStatus = false;\n\n                    console.log(this.password.new.length)\n\n                    if (this.password.new.length < 8) {\n                        Toast('新密码长度为8到20位');\n                        this.btnStatus = false;\n                        return;\n                    } else if (this.password.new !== this.password.again) {\n                        Toast('新密码和确认密码不一致，请确定');\n                        this.btnStatus = false;\n                        return;\n                    } else if (!validaNumberCharacter(this.password.new)) {\n                        Toast('新密码只能为数字和字母');\n                        this.btnStatus = false;\n                        return;\n                    } else {\n                        this.btnStatus = true;\n                        this.submitFetch();\n                    }\n                } else {\n                    this.submitStatus = false;\n                    this.btnStatus = false;\n                    this.submitRuleTextStatus = true;\n                }\n            },\n            submitFetch() {\n\n                ajax.modPassword({\n                    oldPwd: RSA.encryptedString(this.keyPair, this.password.old),\n                    newPwd: RSA.encryptedString(this.keyPair, this.password.new)\n                }).then(response => {\n                    if (!response.success === true) {\n                        Dialog.confirm({\n                            title: response.msg || '修改密码失败',\n                            message: ''\n                        }).then(() => {\n                        }).catch(() => {\n                        });\n                        return;\n                    } else {\n                        if (response.data.success) {\n                            if (this.userName) {\n                                localStorage.setItem('userNameLast', this.userName);\n                            } else {\n                                localStorage.setItem('userNameLast', '');\n                            }\n                            setTimeout(() => {\n                                this.$router.push({\n                                    name: 'passwordModifySuccess'\n                                });\n                            }, 800);\n                        } else {\n                            Toast(response.msg || '修改密码失败');\n                        }\n                    }\n                }).catch(() => {\n                });\n            },\n            navBackClick() {\n                setTimeout(() => {\n                    this.$router.push({\n                        name: 'set'\n                    });\n                }, 800);\n            }\n        }\n    };\n</script>\n\n<style lang=\"less\" scoped>\n    @import \"../../style/formation.less\";\n\n    .set {\n        &_password-wrapper {\n            padding: 16px;\n            background-color: @white;\n            .item {\n                position: relative;\n                padding: 16px 0 8px;\n                border-bottom: 1px solid @border-color-dark;\n                &.bB1 {\n                    border-bottom-color: @main-theme-color;\n                }\n                &-input {\n                    width: 100%;\n                    border: none;\n                    background-color: transparent;\n                    color: @text-color;\n                    font-size: @font-large;\n                    line-height: 1.75;\n                    outline: none;\n                    -webkit-appearance: none;\n                    caret-color: @main-theme-color;\n                    &::-webkit-input-placeholder {\n                        color: @text-color-light;\n                    }\n                }\n                &-notice {\n                    position: absolute;\n                    bottom: 8px;\n                    right: 0;\n                    color: @red;\n                    font-size: @font-small;\n                }\n                .icon-eye {\n                    position: absolute;\n                    right: 3px;\n                    bottom: 12px;\n                }\n            }\n            .icon-eye {\n                display: inline-block;\n                width: 20px;\n                height: 20px;\n                background-image: url(\"../../images/icon_eye_close_dark@2x.png\");\n                background-repeat: no-repeat;\n                background-position: top center;\n                background-size: 100% auto;\n                &_open {\n                    background-image: url(\"../../images/icon_eye_open_dark@2x.png\");\n                    background-size: 100% auto;\n                }\n            }\n        }\n    }\n\n</style>\n"],"sourceRoot":"src/view/set"}]}