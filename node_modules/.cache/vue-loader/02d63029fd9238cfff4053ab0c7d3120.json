{"remainingRequest":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/view/business/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/view/business/index.vue","mtime":1554702217735},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/cache-loader/dist/cjs.js","mtime":1551093967131},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/babel-loader/lib/index.js","mtime":1551093966843},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/cache-loader/dist/cjs.js","mtime":1551093967131},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/vue-loader/lib/index.js","mtime":1551093973497}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    Tag,\n    Col,\n    Icon,\n    Cell,\n    CellGroup,\n    Swipe,\n    Toast,\n    SwipeItem,\n    GoodsAction,\n    GoodsActionBigBtn,\n    GoodsActionMiniBtn,\n    DatetimePicker,\n    Popup,\n    PullRefresh,\n    List\n} from 'vant';\nimport storeData from './store/index';\nimport ajax from '@/api/business';\nimport moment from 'moment';\nimport {payFundStatus, orderStatus, refundStatus} from '@/filters/status';\n\nexport default {\n    components: {\n        [Tag.name]: Tag,\n        [Col.name]: Col,\n        [Icon.name]: Icon,\n        [Cell.name]: Cell,\n        [CellGroup.name]: CellGroup,\n        [Swipe.name]: Swipe,\n        [SwipeItem.name]: SwipeItem,\n        [GoodsAction.name]: GoodsAction,\n        [GoodsActionBigBtn.name]: GoodsActionBigBtn,\n        [GoodsActionMiniBtn.name]: GoodsActionMiniBtn,\n        DatetimePicker: DatetimePicker,\n        Popup: Popup,\n        [PullRefresh.name]: PullRefresh,\n        [List.name]: List,\n    },\n\n    data() {\n        return Object.assign(storeData.call(this), {\n            queryOrder: {\n                orderStatus: '', // 0 待支付，2 成功，8 订单关闭， 10 退款\n                startDate: '',\n                endDate: '',\n                tradeOrderNo: '',\n                payOrderType: 'xxsk',\n                limit: 20,\n                page: 1\n            },\n            orderStatusShow: false,\n            orderObject: {\n                '0': '待支付',\n                '2': '交易成功',\n                '8': '订单关闭',\n                '10': '有退款'\n            },\n            orderSumAmount: {\n                total: '',\n                in: '',\n                out: ''\n            },\n            dateTimePickerStatus: false,\n            minDate: '',\n            maxDate: '',\n            orderStatusText: '全部',\n            orderStatusActive: false,\n\n            total: 0,\n            isLoading: false, //控制下拉刷新的加载动画\n            loading: false, //控制上拉加载的加载动画\n            finished: false,//控制在页面往下移动到底部时是否调用接口获取数据\n            loadingText: '加载中…',\n        });\n    },\n    created() {\n\n        // 详情退回到首页 按日期查询\n        if (this.$route.query && this.$route.query.date) {\n            this.dateSearch = new Date(this.$route.query.date.slice(0, 4), this.$route.query.date.slice(4, 6) * 1 - 1, this.$route.query.date.slice(6, 8));\n        } else {\n            this.dateSearch = new Date();\n        }\n\n        if (this.$route.query && this.$route.query.orderStatusStr) {\n            this.orderSelected = this.$route.query.orderStatusStr;\n        }\n\n        this.minDate = new Date(2019, 0, 1);\n        this.maxDate = new Date();\n        this.queryOrder = {\n            ...this.queryOrder,\n            page: 1,\n\n            startDate:\n            moment(this.dateSearch).format(\"YYYYMMDD\") + '000000',\n            endDate:\n            moment(this.dateSearch).format(\"YYYYMMDD\") + \"235959\"\n        };\n        this.getOrderList();\n        this.getOrderSumAmount();\n    },\n    methods: {\n        //下拉刷新\n        onRefresh() {\n            let self = this;\n            setTimeout(() => {\n                self.total = 0;\n                self.queryOrder.page = 0;\n                self.init(); //加载数据\n            }, 500);\n        },\n        init() {\n            let self = this;\n\n            self.queryOrder.page = 1;\n            self.total = 0;\n\n            Promise.all([self.getOrderList(self)]).then(\n                (results) => {\n                    if (results[0]) {\n                        if (results[0].length < 20) {\n                            self.loadingText = '没有更多数据';\n                        }\n                        self.isLoading = false; //关闭下拉刷新效果\n                    }\n                }\n            ).catch((e) => {\n            });\n        },\n        onLoad() {\n            let self = this;\n            setTimeout(() => {\n                this.queryOrder.page++;\n\n                Promise.all([self.getOrderList(self)]).then(\n                    (results) => {\n                        if (results[0]) {\n                            this.isLoading = false; //关闭下拉刷新效果\n                            if (this.queryOrder.page >= this.total) {\n                                this.finished = true;\n                            }\n                        }\n                    }\n                ).catch((e) => {\n                });\n            }, 500);\n        },\n\n        getOrderList(self) {\n            if (self) {\n                return new Promise((resolve, reject) => {\n                    ajax.getTrade(self.queryOrder).then(response => {\n\n                        if (!response.success === true) {\n                            self.orderList = [];\n                            self.total = 0;\n                            return reject({});\n                        } else {\n                            let lists = [];\n                            response.data.items.forEach(it => {\n                                let item = {\n                                    ...it,\n                                    payType: payFundStatus(it.payType),\n                                    status: it.tradeType === '1' || it.tradeType === 1 ? orderStatus(it.tradeOrderStatus) :\n                                        it.tradeType === '0' || it.tradeType === 0 ? refundStatus(it.refundStatus) : ''\n                                };\n                                lists.push(item);\n                            });\n                            self.orderList = lists;\n                            self.total = response.data.totalCount;\n                            return resolve(\n                                lists\n                            );\n                        }\n                    }).catch(() => {\n                        self.orderList = [];\n                        self.total = 0;\n                        return reject({});\n                    });\n                });\n            } else {\n                return new Promise((resolve, reject) => {\n                    ajax.getTrade(this.queryOrder).then(response => {\n\n                        if (!response.success === true) {\n                            this.orderList = [];\n                            this.total = 0;\n                            return reject({});\n                        } else {\n                            let lists = [];\n                            response.data.items.forEach(it => {\n                                let item = {\n                                    ...it,\n                                    payType: payFundStatus(it.payType),\n                                    status: it.tradeType === '1' || it.tradeType === 1 ? orderStatus(it.tradeOrderStatus) :\n                                        it.tradeType === '0' || it.tradeType === 0 ? refundStatus(it.refundStatus) : ''\n                                };\n                                lists.push(item);\n                            });\n                            this.orderList = lists;\n                            this.total = response.data.totalCount;\n                            return resolve(\n                                lists\n                            );\n                        }\n                    }).catch(() => {\n                        this.orderList = [];\n                        this.total = 0;\n                        return reject({});\n                    });\n                });\n            }\n        },\n        getOrderSumAmount() {\n            ajax.getTradeSumAmount({\n                startDate: this.queryOrder.startDate,\n                endDate: this.queryOrder.endDate,\n                orderStatus: '', // 0 待支付，2 成功，8 订单关闭， 10 退款\n                tradeOrderNo: '',\n                payOrderType: 'xxsk',\n            }).then(response => {\n                if (!response.success === true) {\n\n                } else {\n                    if (response.data) {\n                        this.orderSumAmount = {\n                            ...this.orderSumAmount,\n                            total: response.data.tradeTotalAmount + '' || '',\n                            out: response.data.tradeOutAmount + '' || '',\n                            in: response.data.tradeInAmount + '' || ''\n                        }\n                    }\n                }\n            }).catch(() => {\n            });\n        },\n        orderStatusAction() {\n            const orderStatus = {\n                'all': '',\n                'success': '2',\n                'close': '8',\n                'wait': '0',\n                'refund': '10'\n            };\n\n            const orderText = {\n                'all': '全部',\n                'success': '交易成功',\n                'close': '订单关闭',\n                'wait': '待支付',\n                'refund': '退款'\n            };\n\n            this.orderStatusText = orderText[this.orderSelected];\n            this.orderStatusActive = true;\n            this.queryOrder = {\n                ...this.queryOrder,\n                orderStatus: orderStatus[this.orderSelected],\n                page: 1\n            };\n            this.orderStatusShow = false;\n            this.getOrderList();\n        },\n        orderStatusToggleHandle() {\n            this.orderStatusShow = !this.orderStatusShow;\n        },\n        orderStatusChooseHandle(key) {\n            this.orderSelected = key;\n        },\n        orderHistoryAction() {\n            setTimeout(() => {\n                this.$router.push({\n                    name: 'businessSearch'\n                });\n            }, 800);\n        },\n        orderDetailAction(no, tradeType) {\n            setTimeout(() => {\n                this.$router.push({\n                    name: 'businessDetail',\n                    query: {\n                        tradeOrderNo: no,\n                        tradeType: tradeType,\n                        // date: moment(this.dateSearch).format(\"YYYYMMDD\"),\n                        // orderStatusStr: this.orderSelected\n                    }\n                });\n            }, 800);\n        },\n        dateChangeAction() {\n            this.dateTimePickerStatus = true;\n        },\n        dateTimeChangeAction(picker) {\n\n        },\n        dateTimeCancelAction() {\n            this.dateTimePickerStatus = false;\n        },\n        dateTimeConfirmAction(values) {\n            this.dateSearch = values;\n            this.dateTimePickerStatus = false;\n\n            this.queryOrder = {\n                ...this.queryOrder,\n                page: 1,\n                startDate:\n                moment(this.dateSearch).format(\"YYYYMMDD\") + '000000',\n                endDate:\n                moment(this.dateSearch).format(\"YYYYMMDD\") + \"235959\"\n            };\n            this.getOrderList();\n            if (this.queryOrder.orderStatus.length == 0) {\n                this.getOrderSumAmount();\n            }\n        },\n        navBackClick() {\n            setTimeout(() => {\n                this.$router.push({\n                    name: 'home'\n                });\n            }, 800);\n        },\n    }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/view/business","sourcesContent":["<template>\n    <div>\n        <van-nav-bar\n                class=\"bar-wrapper\"\n                :title=\"this.$route.meta.title\"\n                left-arrow\n                :z-index=\"999\"\n                @click-left=\"navBackClick\"\n        />\n        <div class=\"dailyKnots-wrapper container-wrapper white\">\n            <div class=\"panel-item flex-content flex-content-align flex-content-spaceBetween\">\n                <div class=\"panel-item-select\"\n                     @click=\"orderStatusToggleHandle()\"\n                     :class=\"[orderStatusShow ? 'panel-item-select_down':'',\n                     orderStatusActive ? 'active' : ''\n                     ]\"\n                >{{orderStatusText}}\n                </div>\n                <div @click=\"orderHistoryAction()\"\n                     class=\"\"\n                >\n                    <i class=\"icon-search\"></i>\n                    搜索\n                </div>\n            </div>\n            <div class=\"panel-downContainer\" v-if=\"orderStatusShow\">\n                <ul class=\"panel-downBody\">\n                    <li\n                            v-for=\"(item,key) in orderStatusList\"\n                            :key=\"item.key\"\n                            :style=\"key === 5 ? {visibility: 'hidden'} : {}\"\n                            :class=\"item.key === orderSelected ? 'active' :''\"\n                            @click=\"orderStatusChooseHandle(item.key)\"\n                            class=\"panel-downBody-item flex-content flex-content-align flex-content-justify\"\n                    >{{item.value}}\n                    </li>\n                </ul>\n                <button\n                        class=\"\n                         btn\n                         btn-block\n                         btn-primary\n                         mt10\"\n                        @click=\"orderStatusAction()\"\n                >确定\n                </button>\n            </div>\n            <div class=\"interval-item flex-content flex-content-align flex-content-spaceBetween\">\n                <div class=\"date-select-box\"\n                     @click=\"dateChangeAction()\">\n                    <span>{{this.dateSearch|$_filters_parseDate}}</span>\n                    <i class=\"icon-triangle-dark ml5\"></i>\n                </div>\n                <div class=\"\"\n                     v-if=\"this.orderList && this.orderList.length>0 && this.queryOrder.orderStatus.length == 0\">\n                    <div class=\"font-xs-l\">实收&nbsp;<span v-if=\"this.orderSumAmount.total\">￥{{orderSumAmount.total|$_filters_moneyFormat_fen}}</span>\n                        <span class=\"ml20\">收入&nbsp;<span v-if=\"this.orderSumAmount.in\">￥{{orderSumAmount.in|$_filters_moneyFormat_fen}}</span></span>\n                    </div>\n                    <div class=\"font-xs-l flex-content flex-content-end\">退款&nbsp;<span v-if=\"this.orderSumAmount.out\">￥{{orderSumAmount.out|$_filters_moneyFormat_fen}}</span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"set-form cell-group\"\n                 v-if=\"this.orderList && this.orderList.length>0\"\n            >\n                <van-pull-refresh v-model=\"isLoading\" @refresh=\"onRefresh\">\n                    <van-list\n                            v-model=\"loading\"\n                            :finished=\"finished\"\n                            @load=\"onLoad\"\n                            :finished-text=\"loadingText\"\n                    >\n                        <div class=\"cell\"\n                             v-for=\"(item, key) in this.orderList\"\n                             :key=\"key\"\n                             @click=\"orderDetailAction(item.tradeOrderNo || '', item.tradeType || '')\"\n                        >\n                            <div class=\"cell-inner flex-content flex-content-spaceBetween\"\n                                 style=\"min-height: 102px;\"\n                            >\n                                <div class=\"flex-content flex-content-top\">\n                                    <i class=\"icon-payType mr10\"\n                                       :class=\"item.payType === 'wx' ? 'icon-payType_wx' :\n                               item.payType === 'alipay' ? 'icon-payType_alipay' :\n                                item.payType === 'wm' ? 'icon-payType_wm' :'icon-payType_wm'\"\n                                    ></i>\n                                    <div>\n                                        <div class=\"font-n-d\">{{item.tradeOrderName}}</div>\n                                        <div class=\"font-s-d mt10 text-ellipsis\" v-if=\"item.payType\">\n                                            {{item.payType=== 'alipay'? '支付宝': item.payType=== 'wx'? '微信':\n                                            item.payType===\n                                            'wm'?\n                                            '微脉':''}}订单号:<span\n                                                v-if=\"item.tradeThirdNo\">{{item.tradeThirdNo}}</span>\n                                        </div>\n                                        <div class=\"font-s-d text-ellipsis\"\n                                             :class=\"!item.payType || (item.payType!== 'alipay' && item.payType!== 'wx') ? 'mt10' : ''\"\n                                        >\n                                            支付流水号:<span v-if=\"item.tradeOrderNo\">{{item.tradeOrderNo}}</span>\n                                        </div>\n                                        <div class=\"time\" v-if=\"item.tradeTime\">\n                                            {{item.tradeTime|$_filters_parseTime_hour}}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"cell-right\">\n                                    <div class=\"font-l-d\"\n                                         style=\"position: absolute; top: 16px; right: 0;\">\n                                    <span v-if=\"((item.tradeAmount+'').indexOf('+')) <= -1 &&\n                                     ((item.tradeAmount+'').indexOf('-') <= -1)\">\n                                        {{item.tradeType|$_filters_moneyMark}}\n                                    </span>\n                                        {{item.tradeAmount|$_filters_moneyFormat_fen}}\n                                    </div>\n                                    <div class=\"font-s-b mt4 align-r\"\n                                         style=\"position: absolute; bottom: 16px; right: 0;\"\n                                    >{{item.status}}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </van-list>\n                </van-pull-refresh>\n            </div>\n\n            <div\n                    v-else\n                    class=\"order-none-container\"\n            >\n                <div class=\"prompt-item prompt_small\">\n                    <i class=\"prompt-img noneFound\"></i>\n                    <div class=\"font-l-d align-c mt14\">还没有交易记录哦！</div>\n                </div>\n            </div>\n\n            <van-popup\n                    v-model=\"dateTimePickerStatus\"\n                    position=\"bottom\"\n                    :overlay=\"true\"\n            >\n                <van-datetime-picker\n                        v-model=\"dateSearch\"\n                        v-if=\"dateTimePickerStatus\"\n                        type=\"date\"\n                        :min-date=\"minDate\"\n                        :max-date=\"maxDate\"\n                        :item-height=\"34\"\n                        @change=\"dateTimeChangeAction\"\n                        @cancel=\"dateTimeCancelAction\"\n                        @confirm=\"dateTimeConfirmAction\"\n                />\n            </van-popup>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {\n        Tag,\n        Col,\n        Icon,\n        Cell,\n        CellGroup,\n        Swipe,\n        Toast,\n        SwipeItem,\n        GoodsAction,\n        GoodsActionBigBtn,\n        GoodsActionMiniBtn,\n        DatetimePicker,\n        Popup,\n        PullRefresh,\n        List\n    } from 'vant';\n    import storeData from './store/index';\n    import ajax from '@/api/business';\n    import moment from 'moment';\n    import {payFundStatus, orderStatus, refundStatus} from '@/filters/status';\n\n    export default {\n        components: {\n            [Tag.name]: Tag,\n            [Col.name]: Col,\n            [Icon.name]: Icon,\n            [Cell.name]: Cell,\n            [CellGroup.name]: CellGroup,\n            [Swipe.name]: Swipe,\n            [SwipeItem.name]: SwipeItem,\n            [GoodsAction.name]: GoodsAction,\n            [GoodsActionBigBtn.name]: GoodsActionBigBtn,\n            [GoodsActionMiniBtn.name]: GoodsActionMiniBtn,\n            DatetimePicker: DatetimePicker,\n            Popup: Popup,\n            [PullRefresh.name]: PullRefresh,\n            [List.name]: List,\n        },\n\n        data() {\n            return Object.assign(storeData.call(this), {\n                queryOrder: {\n                    orderStatus: '', // 0 待支付，2 成功，8 订单关闭， 10 退款\n                    startDate: '',\n                    endDate: '',\n                    tradeOrderNo: '',\n                    payOrderType: 'xxsk',\n                    limit: 20,\n                    page: 1\n                },\n                orderStatusShow: false,\n                orderObject: {\n                    '0': '待支付',\n                    '2': '交易成功',\n                    '8': '订单关闭',\n                    '10': '有退款'\n                },\n                orderSumAmount: {\n                    total: '',\n                    in: '',\n                    out: ''\n                },\n                dateTimePickerStatus: false,\n                minDate: '',\n                maxDate: '',\n                orderStatusText: '全部',\n                orderStatusActive: false,\n\n                total: 0,\n                isLoading: false, //控制下拉刷新的加载动画\n                loading: false, //控制上拉加载的加载动画\n                finished: false,//控制在页面往下移动到底部时是否调用接口获取数据\n                loadingText: '加载中…',\n            });\n        },\n        created() {\n\n            // 详情退回到首页 按日期查询\n            if (this.$route.query && this.$route.query.date) {\n                this.dateSearch = new Date(this.$route.query.date.slice(0, 4), this.$route.query.date.slice(4, 6) * 1 - 1, this.$route.query.date.slice(6, 8));\n            } else {\n                this.dateSearch = new Date();\n            }\n\n            if (this.$route.query && this.$route.query.orderStatusStr) {\n                this.orderSelected = this.$route.query.orderStatusStr;\n            }\n\n            this.minDate = new Date(2019, 0, 1);\n            this.maxDate = new Date();\n            this.queryOrder = {\n                ...this.queryOrder,\n                page: 1,\n\n                startDate:\n                moment(this.dateSearch).format(\"YYYYMMDD\") + '000000',\n                endDate:\n                moment(this.dateSearch).format(\"YYYYMMDD\") + \"235959\"\n            };\n            this.getOrderList();\n            this.getOrderSumAmount();\n        },\n        methods: {\n            //下拉刷新\n            onRefresh() {\n                let self = this;\n                setTimeout(() => {\n                    self.total = 0;\n                    self.queryOrder.page = 0;\n                    self.init(); //加载数据\n                }, 500);\n            },\n            init() {\n                let self = this;\n\n                self.queryOrder.page = 1;\n                self.total = 0;\n\n                Promise.all([self.getOrderList(self)]).then(\n                    (results) => {\n                        if (results[0]) {\n                            if (results[0].length < 20) {\n                                self.loadingText = '没有更多数据';\n                            }\n                            self.isLoading = false; //关闭下拉刷新效果\n                        }\n                    }\n                ).catch((e) => {\n                });\n            },\n            onLoad() {\n                let self = this;\n                setTimeout(() => {\n                    this.queryOrder.page++;\n\n                    Promise.all([self.getOrderList(self)]).then(\n                        (results) => {\n                            if (results[0]) {\n                                this.isLoading = false; //关闭下拉刷新效果\n                                if (this.queryOrder.page >= this.total) {\n                                    this.finished = true;\n                                }\n                            }\n                        }\n                    ).catch((e) => {\n                    });\n                }, 500);\n            },\n\n            getOrderList(self) {\n                if (self) {\n                    return new Promise((resolve, reject) => {\n                        ajax.getTrade(self.queryOrder).then(response => {\n\n                            if (!response.success === true) {\n                                self.orderList = [];\n                                self.total = 0;\n                                return reject({});\n                            } else {\n                                let lists = [];\n                                response.data.items.forEach(it => {\n                                    let item = {\n                                        ...it,\n                                        payType: payFundStatus(it.payType),\n                                        status: it.tradeType === '1' || it.tradeType === 1 ? orderStatus(it.tradeOrderStatus) :\n                                            it.tradeType === '0' || it.tradeType === 0 ? refundStatus(it.refundStatus) : ''\n                                    };\n                                    lists.push(item);\n                                });\n                                self.orderList = lists;\n                                self.total = response.data.totalCount;\n                                return resolve(\n                                    lists\n                                );\n                            }\n                        }).catch(() => {\n                            self.orderList = [];\n                            self.total = 0;\n                            return reject({});\n                        });\n                    });\n                } else {\n                    return new Promise((resolve, reject) => {\n                        ajax.getTrade(this.queryOrder).then(response => {\n\n                            if (!response.success === true) {\n                                this.orderList = [];\n                                this.total = 0;\n                                return reject({});\n                            } else {\n                                let lists = [];\n                                response.data.items.forEach(it => {\n                                    let item = {\n                                        ...it,\n                                        payType: payFundStatus(it.payType),\n                                        status: it.tradeType === '1' || it.tradeType === 1 ? orderStatus(it.tradeOrderStatus) :\n                                            it.tradeType === '0' || it.tradeType === 0 ? refundStatus(it.refundStatus) : ''\n                                    };\n                                    lists.push(item);\n                                });\n                                this.orderList = lists;\n                                this.total = response.data.totalCount;\n                                return resolve(\n                                    lists\n                                );\n                            }\n                        }).catch(() => {\n                            this.orderList = [];\n                            this.total = 0;\n                            return reject({});\n                        });\n                    });\n                }\n            },\n            getOrderSumAmount() {\n                ajax.getTradeSumAmount({\n                    startDate: this.queryOrder.startDate,\n                    endDate: this.queryOrder.endDate,\n                    orderStatus: '', // 0 待支付，2 成功，8 订单关闭， 10 退款\n                    tradeOrderNo: '',\n                    payOrderType: 'xxsk',\n                }).then(response => {\n                    if (!response.success === true) {\n\n                    } else {\n                        if (response.data) {\n                            this.orderSumAmount = {\n                                ...this.orderSumAmount,\n                                total: response.data.tradeTotalAmount + '' || '',\n                                out: response.data.tradeOutAmount + '' || '',\n                                in: response.data.tradeInAmount + '' || ''\n                            }\n                        }\n                    }\n                }).catch(() => {\n                });\n            },\n            orderStatusAction() {\n                const orderStatus = {\n                    'all': '',\n                    'success': '2',\n                    'close': '8',\n                    'wait': '0',\n                    'refund': '10'\n                };\n\n                const orderText = {\n                    'all': '全部',\n                    'success': '交易成功',\n                    'close': '订单关闭',\n                    'wait': '待支付',\n                    'refund': '退款'\n                };\n\n                this.orderStatusText = orderText[this.orderSelected];\n                this.orderStatusActive = true;\n                this.queryOrder = {\n                    ...this.queryOrder,\n                    orderStatus: orderStatus[this.orderSelected],\n                    page: 1\n                };\n                this.orderStatusShow = false;\n                this.getOrderList();\n            },\n            orderStatusToggleHandle() {\n                this.orderStatusShow = !this.orderStatusShow;\n            },\n            orderStatusChooseHandle(key) {\n                this.orderSelected = key;\n            },\n            orderHistoryAction() {\n                setTimeout(() => {\n                    this.$router.push({\n                        name: 'businessSearch'\n                    });\n                }, 800);\n            },\n            orderDetailAction(no, tradeType) {\n                setTimeout(() => {\n                    this.$router.push({\n                        name: 'businessDetail',\n                        query: {\n                            tradeOrderNo: no,\n                            tradeType: tradeType,\n                            // date: moment(this.dateSearch).format(\"YYYYMMDD\"),\n                            // orderStatusStr: this.orderSelected\n                        }\n                    });\n                }, 800);\n            },\n            dateChangeAction() {\n                this.dateTimePickerStatus = true;\n            },\n            dateTimeChangeAction(picker) {\n\n            },\n            dateTimeCancelAction() {\n                this.dateTimePickerStatus = false;\n            },\n            dateTimeConfirmAction(values) {\n                this.dateSearch = values;\n                this.dateTimePickerStatus = false;\n\n                this.queryOrder = {\n                    ...this.queryOrder,\n                    page: 1,\n                    startDate:\n                    moment(this.dateSearch).format(\"YYYYMMDD\") + '000000',\n                    endDate:\n                    moment(this.dateSearch).format(\"YYYYMMDD\") + \"235959\"\n                };\n                this.getOrderList();\n                if (this.queryOrder.orderStatus.length == 0) {\n                    this.getOrderSumAmount();\n                }\n            },\n            navBackClick() {\n                setTimeout(() => {\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }, 800);\n            },\n        }\n    };\n</script>\n\n<style lang=\"less\" scoped>\n    @import \"../../style/formation.less\";\n\n    .time {\n        color: @text-color-light;\n        font-size: @font-smaller;\n        line-height: 1.5;\n        margin-top: 6px;\n    }\n\n    .icon-search {\n        vertical-align: middle;\n    }\n\n</style>\n"]}]}