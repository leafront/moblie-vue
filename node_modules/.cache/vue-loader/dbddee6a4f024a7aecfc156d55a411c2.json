{"remainingRequest":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/view/login/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/view/login/index.vue","mtime":1555033971737},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/babel-loader/lib/index.js","mtime":1551093966843},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/cache-loader/dist/cjs.js","mtime":1551093967131},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/vue-loader/lib/index.js","mtime":1551093973497}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    Tag,\n    Col,\n    Icon,\n    Cell,\n    CellGroup,\n    Swipe,\n    Toast,\n    SwipeItem,\n    GoodsAction,\n    GoodsActionBigBtn,\n    GoodsActionMiniBtn,\n    Dialog,\n    Picker,\n    Popup\n} from 'vant';\nimport storeData from './store/index';\nimport ajaxUser from '@/api/user';\nimport ajax from '@/api/login';\nimport Cookies from 'js-cookie';\nimport RSA from '@/libs/RSA';\n\nexport default {\n    components: {\n        [Tag.name]: Tag,\n        [Col.name]: Col,\n        [Icon.name]: Icon,\n        [Cell.name]: Cell,\n        [CellGroup.name]: CellGroup,\n        [Swipe.name]: Swipe,\n        [SwipeItem.name]: SwipeItem,\n        [GoodsAction.name]: GoodsAction,\n        [GoodsActionBigBtn.name]: GoodsActionBigBtn,\n        [GoodsActionMiniBtn.name]: GoodsActionMiniBtn,\n        Dialog: Dialog,\n        [Picker.name]: Picker,\n        Popup: Popup\n    },\n\n    data() {\n        return Object.assign(storeData.call(this), {\n            // indexPicker:  0,\n            // valuePicker: '',\n            departNameShow: false,\n            merchantName: '',\n            merchantId: ''\n        });\n    },\n    created() {\n        this.getToken();\n        this.accountList = this.accountListComputed();\n        this.departList = this.departListComputed();\n\n        if (localStorage.getItem('merchantName') && localStorage.getItem('merchantName').length > 0) {\n            this.merchantName = localStorage.getItem('merchantName');\n            this.merchantId = localStorage.getItem('merchantId');\n            this.departPickerShow = true;\n        } else {\n           this.departPickerShow =false;\n        }\n\n        if (this.departList && this.departList.length > 0) {\n            this.departListCurrent = this.departList[0]['depart'];\n            this.depart = this.departListCurrent;\n            this.valuePicker = this.departListCurrent;\n        }\n\n        if (this.departList) {\n            let arr = [];\n            this.departList.forEach(it => {\n                arr.push(it.depart);\n            });\n            this.departListColumns = arr;\n        }\n        // if (window.history && window.history.pushState) {\n        //     window.onpopstate = function () {\n        //         window.history.forward(1);\n        //     }\n        // }\n    },\n    watch: {\n        'depart': function (val, old) {\n            if (val) {\n                this.loginRule[0] = 1;\n                if (this.account && this.password) {\n                    this.loginStatus = true;\n                } else {\n                    this.loginStatus = false;\n                }\n            } else {\n                this.loginRule[0] = 0;\n                this.loginStatus = false;\n            }\n            if (val !== old) {\n                this.loginInputStatus[0] = 1;\n                this.loginInputStatus[1] = 0;\n                this.loginInputStatus[2] = 0;\n            } else {\n                this.loginInputStatus[0] = 0;\n            }\n        },\n        'account': function (val, old) {\n            if (val) {\n                this.loginRule[1] = 1;\n                if (this.account && this.password) {\n                    this.loginStatus = true;\n                } else {\n                    this.loginStatus = false;\n                }\n            } else {\n                this.loginRule[1] = 0;\n                this.loginStatus = false;\n            }\n            if (val !== old) {\n                this.loginInputStatus[0] = 0;\n                this.loginInputStatus[1] = 1;\n                this.loginInputStatus[2] = 0;\n                this.accountShow = false;\n            } else {\n                this.loginInputStatus[1] = 0;\n            }\n        },\n        'password': function (val, old) {\n            if (val) {\n                this.loginRule[2] = 1;\n                if (this.account && this.password) {\n                    this.loginStatus = true;\n                } else {\n                    this.loginStatus = false;\n                }\n            } else {\n                this.loginRule[2] = 0;\n                this.loginStatus = false;\n            }\n            if (val !== old) {\n                this.loginInputStatus[0] = 0;\n                this.loginInputStatus[1] = 0;\n                this.loginInputStatus[2] = 1;\n            } else {\n                this.loginInputStatus[2] = 0;\n            }\n        },\n        accountList() {\n            this.accountListComputed();\n        },\n        departList() {\n            this.departListComputed();\n        },\n    },\n    methods: {\n        getToken() {\n            ajax.getToken({\n                _: new Date().getTime()\n            }).then(response => {\n                if (!response.success === true) {\n                    return;\n                }\n                let res = response.data;\n                const keyPair = RSA.getKeyPair(\n                    res.exponent, '', res.modulus\n                );\n                this.keyPair = keyPair;\n            }).catch(() => {\n            });\n        },\n        loginAction() {\n            if (this.loginRule.join() === '1,1,1') {\n                this.loginStatus = true;\n                this.loginRuleTextStatus = false;\n                this.loginFetch();\n            } else {\n                this.loginInputStatus = [0, 0, 0];\n                this.loginStatus = false;\n                this.loginRuleTextStatus = true;\n            }\n        },\n        loginFetch() {\n            ajax.login({\n                clientMerchantId: this.depart,\n                login_name: this.account,\n                login_pwd: RSA.encryptedString(this.keyPair, this.password)\n            }).then(response => {\n                if (!response.success === true) {\n                    Dialog.confirm({\n                        title: response.msg || '登录失败',\n                        message: ''\n                    }).then(() => {\n                    }).catch(() => {\n                    });\n                    localStorage.setItem('departName_current', '');\n                    localStorage.setItem('userName_current', '');\n                    return;\n                }\n                localStorage.setItem('departName_current', this.depart);\n                localStorage.setItem('userName_current', this.account);\n                localStorage.setItem('accountList', JSON.stringify(this.accountListComputed()));\n                localStorage.setItem('departList', JSON.stringify(this.departListComputed()));\n                this.merchantInfo();\n\n                this.$router.push({\n                    name: 'home'\n                });\n            }).catch(() => {\n            });\n        },\n        merchantInfo() {\n            ajaxUser.merchantUser({}).then(response => {\n                if (!response.success === true) {\n                    return;\n                } else {\n                    if (response.data && response.data) {\n                        this.merchantName = response.data.merchantNickName || '';\n                        localStorage.setItem('merchantName', this.merchantName);\n                        localStorage.setItem('merchantId', this.depart);\n                    }\n                }\n            }).catch(() => {\n            });\n        },\n        accountSelectHandle() {\n            this.accountShow = !this.accountShow;\n            if (this.accountList) {\n\n            }\n        },\n        accountChangeHandle(item) {\n            this.account = item.account;\n            this.accountShow = false;\n        },\n        passwordShowHandle() {\n            this.passwordShow = !this.passwordShow;\n        },\n        deleteAccountAction(item, key) {\n            Dialog.confirm({\n                title: '确认删除历史登录账号?',\n                message: item.account\n            }).then(() => {\n                if (item.account === this.account) {\n                    this.account = '';\n                }\n                if (key === 0) {\n                    localStorage.setItem('userName_current', '');\n                }\n                this.accountList.splice(this.accountList.findIndex(v => v === item), 1);\n                localStorage.setItem('accountList', JSON.stringify(this.accountList));\n\n                if (this.accountList.length === 0) {\n                    this.accountShow = false;\n                }\n            }).catch(() => {\n                this.accountShow = true;\n            });\n        },\n        accountListComputed() {\n            let userListOld;\n            if (localStorage.getItem('accountList')) {\n                userListOld = eval(localStorage.getItem('accountList')) || [];\n            } else {\n                userListOld = [];\n            }\n            let userList;\n            if (localStorage.getItem('userName_current')) {\n                if (userListOld) {\n                    userList = [{account: localStorage.getItem('userName_current') || this.accountName}].concat(userListOld.filter((it) => {\n                        if (it.account !== localStorage.getItem('userName_current') || this.accountName) {\n                            return it;\n                        }\n                    }));\n                } else {\n                    userList = [{account: localStorage.getItem('userName_current') || this.accountName}];\n                }\n            } else {\n                userList = userListOld;\n            }\n            return userList;\n        },\n        departListComputed(status, index) {\n            let departListOld;\n\n            if (localStorage.getItem('departList')) {\n                departListOld = eval(localStorage.getItem('departList')) || [];\n            } else {\n                departListOld = [];\n            }\n            let departList;\n            if (localStorage.getItem('departName_current')) {\n                if (departListOld) {\n                    departList = [{depart: localStorage.getItem('departName_current') || this.depart}].concat(departListOld.filter((it) => {\n                        if (it.depart !== localStorage.getItem('departName_current') || this.depart) {\n                            return it;\n                        }\n                    }));\n                } else {\n                    departList = [{depart: localStorage.getItem('departName_current') || this.depart}];\n                }\n            } else {\n                departList = departListOld;\n            }\n            return departList;\n        },\n        departPickerHandle() {\n            this.departPickerShow = !this.departPickerShow;\n            if (this.departPickerShow) {\n                this.loginInputStatus[0] = 0;\n                this.loginInputStatus[2] = 0;\n            }\n\n            this.depart = this.merchantId;\n\n        },\n        onChange(picker, value, index) {\n            // Toast(`当前值：${value}, 当前索引：${index}`);\n            // this['picker'] = picker;\n        },\n        onConfirm(value, index) {\n            if (this.depart !== value) {\n                this.departListCurrent = value;\n                this.depart = value;\n                let list = [value].concat(this.departListColumns);\n                list.splice(index + 1, 1);\n                this.departListColumns = list;\n            }\n\n            setTimeout(() => {\n                this.departPickerShow = false;\n            }, 800);\n            // this.$toast(value, index);\n        },\n        onCancel() {\n            // this.$toast('取消');\n            this.departPickerShow = false;\n        }\n    },\n    // beforeDestroy: {\n    //\n    // }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"src/view/login","sourcesContent":["<template>\n    <div class=\"login-wrapper container-wrapper\">\n        <div class=\"login-inner\">\n            <h3 class=\"login-title\">欢迎登录!</h3>\n            <div v-if=\"this.departList &&\n            this.departList.length > 0 && this.departPickerShow\"\n                 class=\"sculpture-item\">\n                <i src=\"\"\n                   class=\"sculpture-item-img\"\n                />\n                <div class=\"align-c\">\n                    <div class=\"sculpture-item-name\"\n                         @click=\"departPickerHandle()\"\n                         v-if=\"\n                              this.merchantName && this.departPickerShow\"\n                    >\n                        {{merchantName}}\n                        <i\n                                class=\"icon-select-left\"\n                        ></i>\n                    </div>\n                </div>\n            </div>\n\n            <div v-if=\"!this.departPickerShow\"\n                 class=\"item\"\n                 :class=\"this.loginInputStatus[0] === 1 ? 'bB1' : ''\">\n                <div class=\"item-wrapper\">\n                    <div class=\"item-label\">机构编码</div>\n                    <input v-model=\"depart\"\n                           class=\"item-input\"\n                           max=\"20\"\n                           placeholder=\"请输入机构编码\"/>\n                    <p class=\"item-notice\"\n                       v-show=\"\n                       this.loginRule[0] === 0 &&\n                       this.loginRuleTextStatus === true\">\n                        不能为空</p>\n                </div>\n            </div>\n\n            <div class=\"item\" :class=\"this.loginInputStatus[1] === 1 ? 'bB1' : ''\">\n                <div class=\"item-wrapper\">\n                    <div class=\"item-label\">账户</div>\n                    <input\n                            v-model=\"account\"\n                            class=\"item-input\"\n                            max=\"20\"\n                            placeholder=\"请输入账号\"/>\n                    <i class=\"icon-select\"\n                       v-if=\"this.accountList && this.accountList.length > 0\"\n                       @click=\"accountSelectHandle()\"\n                       :class=\"this.accountShow ? 'icon-select_toggle' : ''\"\n                    ></i>\n                    <p class=\"item-notice\" v-show=\"this.loginRule[1] === 0 && this.loginRuleTextStatus === true\">\n                        不能为空</p>\n                </div>\n            </div>\n\n            <div class=\"accountHistoryList\"\n                 v-if=\"this.accountList && this.accountList.length > 0 && this.accountShow\">\n                <div class=\"accountHistoryItem\"\n                     v-for=\"(item,key) in accountList\"\n                     :key=\"key\"\n                >\n                    <div style=\"width: 80%;\"\n                         @click=\"accountChangeHandle(item)\"\n                    >{{item.account}}\n                    </div>\n                    <i\n                            class=\"icon-delete\"\n                            @click=\"deleteAccountAction(item, key)\"\n                    ></i>\n                </div>\n            </div>\n\n            <div class=\"item\"\n                 :class=\"this.loginInputStatus[2] === 1 ? 'bB1' : ''\"\n                 v-show=\"(this.accountList && !this.accountShow) || this.accountList.length===0\">\n                <div class=\"item-wrapper\">\n                    <div class=\"item-label\">密码</div>\n                    <input\n                            v-model=\"password\"\n                            class=\"item-input\"\n                            max=\"20\"\n                            :type=\"this.passwordShow ? 'text': 'password'\"\n                            placeholder=\"请输入密码\"/>\n                    <i\n                            class=\"icon-eye\"\n                            v-if=\"password\"\n                            @click=\"passwordShowHandle()\"\n                            :class=\"this.passwordShow ? 'icon-eye_open':''\"\n                    ></i>\n                    <p\n                            class=\"item-notice\"\n                            v-show=\"this.loginRule[2] === 0 && this.loginRuleTextStatus === true\">\n                        不能为空</p>\n                </div>\n            </div>\n\n            <button\n                    class=\"\n                         btn\n                         btn-block\n                         btn-primary\n                         mt14\"\n                    :class=\"loginStatus ? '': 'btn-disabled_white'\"\n                    v-show=\"(this.accountList && !this.accountShow) || this.accountList.length===0\"\n                    @click=\"loginAction()\">登录\n            </button>\n        </div>\n        <!--<van-popup-->\n                <!--v-model=\"departPickerShow\"-->\n                <!--position=\"bottom\"-->\n                <!--:overlay=\"true\"-->\n        <!--&gt;-->\n            <!--<van-picker-->\n                    <!--ref=\"departpicker\"-->\n                    <!--v-if=\"this.departPickerShow\"-->\n                    <!--:columns=\"departListColumns\"-->\n                    <!--@change=\"onChange\"-->\n                    <!--:item-height=\"34\"-->\n                    <!--show-toolbar-->\n                    <!--:visible-item-count=\"5\"-->\n                    <!--confirm-button-text=\"确定\"-->\n                    <!--cancel-button-text=\"取消\"-->\n                    <!--@cancel=\"onCancel\"-->\n                    <!--@confirm=\"onConfirm\">-->\n            <!--</van-picker>-->\n        <!--</van-popup>-->\n    </div>\n</template>\n\n<script>\n    import {\n        Tag,\n        Col,\n        Icon,\n        Cell,\n        CellGroup,\n        Swipe,\n        Toast,\n        SwipeItem,\n        GoodsAction,\n        GoodsActionBigBtn,\n        GoodsActionMiniBtn,\n        Dialog,\n        Picker,\n        Popup\n    } from 'vant';\n    import storeData from './store/index';\n    import ajaxUser from '@/api/user';\n    import ajax from '@/api/login';\n    import Cookies from 'js-cookie';\n    import RSA from '@/libs/RSA';\n\n    export default {\n        components: {\n            [Tag.name]: Tag,\n            [Col.name]: Col,\n            [Icon.name]: Icon,\n            [Cell.name]: Cell,\n            [CellGroup.name]: CellGroup,\n            [Swipe.name]: Swipe,\n            [SwipeItem.name]: SwipeItem,\n            [GoodsAction.name]: GoodsAction,\n            [GoodsActionBigBtn.name]: GoodsActionBigBtn,\n            [GoodsActionMiniBtn.name]: GoodsActionMiniBtn,\n            Dialog: Dialog,\n            [Picker.name]: Picker,\n            Popup: Popup\n        },\n\n        data() {\n            return Object.assign(storeData.call(this), {\n                // indexPicker:  0,\n                // valuePicker: '',\n                departNameShow: false,\n                merchantName: '',\n                merchantId: ''\n            });\n        },\n        created() {\n            this.getToken();\n            this.accountList = this.accountListComputed();\n            this.departList = this.departListComputed();\n\n            if (localStorage.getItem('merchantName') && localStorage.getItem('merchantName').length > 0) {\n                this.merchantName = localStorage.getItem('merchantName');\n                this.merchantId = localStorage.getItem('merchantId');\n                this.departPickerShow = true;\n            } else {\n               this.departPickerShow =false;\n            }\n\n            if (this.departList && this.departList.length > 0) {\n                this.departListCurrent = this.departList[0]['depart'];\n                this.depart = this.departListCurrent;\n                this.valuePicker = this.departListCurrent;\n            }\n\n            if (this.departList) {\n                let arr = [];\n                this.departList.forEach(it => {\n                    arr.push(it.depart);\n                });\n                this.departListColumns = arr;\n            }\n            // if (window.history && window.history.pushState) {\n            //     window.onpopstate = function () {\n            //         window.history.forward(1);\n            //     }\n            // }\n        },\n        watch: {\n            'depart': function (val, old) {\n                if (val) {\n                    this.loginRule[0] = 1;\n                    if (this.account && this.password) {\n                        this.loginStatus = true;\n                    } else {\n                        this.loginStatus = false;\n                    }\n                } else {\n                    this.loginRule[0] = 0;\n                    this.loginStatus = false;\n                }\n                if (val !== old) {\n                    this.loginInputStatus[0] = 1;\n                    this.loginInputStatus[1] = 0;\n                    this.loginInputStatus[2] = 0;\n                } else {\n                    this.loginInputStatus[0] = 0;\n                }\n            },\n            'account': function (val, old) {\n                if (val) {\n                    this.loginRule[1] = 1;\n                    if (this.account && this.password) {\n                        this.loginStatus = true;\n                    } else {\n                        this.loginStatus = false;\n                    }\n                } else {\n                    this.loginRule[1] = 0;\n                    this.loginStatus = false;\n                }\n                if (val !== old) {\n                    this.loginInputStatus[0] = 0;\n                    this.loginInputStatus[1] = 1;\n                    this.loginInputStatus[2] = 0;\n                    this.accountShow = false;\n                } else {\n                    this.loginInputStatus[1] = 0;\n                }\n            },\n            'password': function (val, old) {\n                if (val) {\n                    this.loginRule[2] = 1;\n                    if (this.account && this.password) {\n                        this.loginStatus = true;\n                    } else {\n                        this.loginStatus = false;\n                    }\n                } else {\n                    this.loginRule[2] = 0;\n                    this.loginStatus = false;\n                }\n                if (val !== old) {\n                    this.loginInputStatus[0] = 0;\n                    this.loginInputStatus[1] = 0;\n                    this.loginInputStatus[2] = 1;\n                } else {\n                    this.loginInputStatus[2] = 0;\n                }\n            },\n            accountList() {\n                this.accountListComputed();\n            },\n            departList() {\n                this.departListComputed();\n            },\n        },\n        methods: {\n            getToken() {\n                ajax.getToken({\n                    _: new Date().getTime()\n                }).then(response => {\n                    if (!response.success === true) {\n                        return;\n                    }\n                    let res = response.data;\n                    const keyPair = RSA.getKeyPair(\n                        res.exponent, '', res.modulus\n                    );\n                    this.keyPair = keyPair;\n                }).catch(() => {\n                });\n            },\n            loginAction() {\n                if (this.loginRule.join() === '1,1,1') {\n                    this.loginStatus = true;\n                    this.loginRuleTextStatus = false;\n                    this.loginFetch();\n                } else {\n                    this.loginInputStatus = [0, 0, 0];\n                    this.loginStatus = false;\n                    this.loginRuleTextStatus = true;\n                }\n            },\n            loginFetch() {\n                ajax.login({\n                    clientMerchantId: this.depart,\n                    login_name: this.account,\n                    login_pwd: RSA.encryptedString(this.keyPair, this.password)\n                }).then(response => {\n                    if (!response.success === true) {\n                        Dialog.confirm({\n                            title: response.msg || '登录失败',\n                            message: ''\n                        }).then(() => {\n                        }).catch(() => {\n                        });\n                        localStorage.setItem('departName_current', '');\n                        localStorage.setItem('userName_current', '');\n                        return;\n                    }\n                    localStorage.setItem('departName_current', this.depart);\n                    localStorage.setItem('userName_current', this.account);\n                    localStorage.setItem('accountList', JSON.stringify(this.accountListComputed()));\n                    localStorage.setItem('departList', JSON.stringify(this.departListComputed()));\n                    this.merchantInfo();\n\n                    this.$router.push({\n                        name: 'home'\n                    });\n                }).catch(() => {\n                });\n            },\n            merchantInfo() {\n                ajaxUser.merchantUser({}).then(response => {\n                    if (!response.success === true) {\n                        return;\n                    } else {\n                        if (response.data && response.data) {\n                            this.merchantName = response.data.merchantNickName || '';\n                            localStorage.setItem('merchantName', this.merchantName);\n                            localStorage.setItem('merchantId', this.depart);\n                        }\n                    }\n                }).catch(() => {\n                });\n            },\n            accountSelectHandle() {\n                this.accountShow = !this.accountShow;\n                if (this.accountList) {\n\n                }\n            },\n            accountChangeHandle(item) {\n                this.account = item.account;\n                this.accountShow = false;\n            },\n            passwordShowHandle() {\n                this.passwordShow = !this.passwordShow;\n            },\n            deleteAccountAction(item, key) {\n                Dialog.confirm({\n                    title: '确认删除历史登录账号?',\n                    message: item.account\n                }).then(() => {\n                    if (item.account === this.account) {\n                        this.account = '';\n                    }\n                    if (key === 0) {\n                        localStorage.setItem('userName_current', '');\n                    }\n                    this.accountList.splice(this.accountList.findIndex(v => v === item), 1);\n                    localStorage.setItem('accountList', JSON.stringify(this.accountList));\n\n                    if (this.accountList.length === 0) {\n                        this.accountShow = false;\n                    }\n                }).catch(() => {\n                    this.accountShow = true;\n                });\n            },\n            accountListComputed() {\n                let userListOld;\n                if (localStorage.getItem('accountList')) {\n                    userListOld = eval(localStorage.getItem('accountList')) || [];\n                } else {\n                    userListOld = [];\n                }\n                let userList;\n                if (localStorage.getItem('userName_current')) {\n                    if (userListOld) {\n                        userList = [{account: localStorage.getItem('userName_current') || this.accountName}].concat(userListOld.filter((it) => {\n                            if (it.account !== localStorage.getItem('userName_current') || this.accountName) {\n                                return it;\n                            }\n                        }));\n                    } else {\n                        userList = [{account: localStorage.getItem('userName_current') || this.accountName}];\n                    }\n                } else {\n                    userList = userListOld;\n                }\n                return userList;\n            },\n            departListComputed(status, index) {\n                let departListOld;\n\n                if (localStorage.getItem('departList')) {\n                    departListOld = eval(localStorage.getItem('departList')) || [];\n                } else {\n                    departListOld = [];\n                }\n                let departList;\n                if (localStorage.getItem('departName_current')) {\n                    if (departListOld) {\n                        departList = [{depart: localStorage.getItem('departName_current') || this.depart}].concat(departListOld.filter((it) => {\n                            if (it.depart !== localStorage.getItem('departName_current') || this.depart) {\n                                return it;\n                            }\n                        }));\n                    } else {\n                        departList = [{depart: localStorage.getItem('departName_current') || this.depart}];\n                    }\n                } else {\n                    departList = departListOld;\n                }\n                return departList;\n            },\n            departPickerHandle() {\n                this.departPickerShow = !this.departPickerShow;\n                if (this.departPickerShow) {\n                    this.loginInputStatus[0] = 0;\n                    this.loginInputStatus[2] = 0;\n                }\n\n                this.depart = this.merchantId;\n\n            },\n            onChange(picker, value, index) {\n                // Toast(`当前值：${value}, 当前索引：${index}`);\n                // this['picker'] = picker;\n            },\n            onConfirm(value, index) {\n                if (this.depart !== value) {\n                    this.departListCurrent = value;\n                    this.depart = value;\n                    let list = [value].concat(this.departListColumns);\n                    list.splice(index + 1, 1);\n                    this.departListColumns = list;\n                }\n\n                setTimeout(() => {\n                    this.departPickerShow = false;\n                }, 800);\n                // this.$toast(value, index);\n            },\n            onCancel() {\n                // this.$toast('取消');\n                this.departPickerShow = false;\n            }\n        },\n        // beforeDestroy: {\n        //\n        // }\n    };\n</script>\n\n<style lang=\"less\" scoped>\n    @import \"../../style/formation.less\";\n\n    .login {\n        &-inner {\n            padding: 14px 34px;\n        }\n        &-wrapper {\n            position: fixed;\n            top: 0;\n            background-image: url(\"../../images/login_bg@2x.png\");\n            background-position: center;\n            background-repeat: no-repeat;\n            background-size: 100% 100%;\n            background-attachment: fixed;\n            z-index: -100;\n            .item {\n                position: relative;\n                padding: 16px 0 8px;\n                border-bottom: 1px solid @whiteFilter;\n                &.bB1 {\n                    border-bottom-color: @white;\n                }\n                &-label {\n                    font-size: 12px;\n                    line-height: 1.75;\n                    color: @white;\n                    margin-bottom: 4px;\n                }\n                &-input {\n                    width: 100%;\n                    border: none;\n                    background-color: transparent;\n                    color: @white;\n                    line-height: 1.75;\n                    outline: none;\n                    -webkit-appearance: none;\n                    &::-webkit-input-placeholder {\n                        color: @whiteFilter;\n                    }\n                }\n                &-notice {\n                    position: absolute;\n                    bottom: 2px;\n                    right: 0;\n                    color: @red;\n                    font-size: @font-small;\n                }\n                .icon-eye {\n                    position: absolute;\n                    right: 3px;\n                    bottom: 8px;\n                    width: 26px;\n                    height: 26px;\n                    &_open {\n                        right: 4px;\n                        background-image: url(\"../../images/icon_eye_open@2x.png\");\n                    }\n                }\n            }\n        }\n        &-title {\n            color: #fff;\n            font-weight: 400;\n            font-size: @font-largest;\n        }\n    }\n\n    .sculpture-item {\n        text-align: center;\n        &-img {\n            display: inline-block;\n            width: 42px;\n            height: 42px;\n            border-radius: 50%;\n            border: none;\n            background-image: url(\"../../images/icon_large_headSculpture@2x.png\");\n            background-repeat: no-repeat;\n            background-position: top center;\n            background-size: 100% auto;\n        }\n        &-name {\n            display: inline-block;\n            font-size: @font-smaller;\n            color: @white;\n            padding-left: 4px;\n            margin-left: 3px;\n            cursor: pointer;\n            .icon-select-left {\n                width: 18px;\n                height: 18px;\n                vertical-align: text-top;\n            }\n        }\n    }\n\n    .accountHistoryList {\n        .accountHistoryItem {\n            position: relative;\n            font-size: @font-largest;\n            color: @white;\n            line-height: 1.5;\n            padding: 14px 0;\n            box-sizing: border-box;\n            border-bottom: 1px solid @whiteFilter;\n            .icon-delete {\n                position: absolute;\n                top: 22px;\n                right: 8px;\n            }\n        }\n    }\n\n    .icon-select {\n        position: absolute;\n        right: 2px;\n        bottom: 10px;\n        display: inline-block;\n        width: 30px;\n        height: 30px;\n        background-image: url(\"../../images/icon_down@2x.png\");\n        background-repeat: no-repeat;\n        background-position: top center;\n        background-size: 100% auto;\n        &_toggle {\n            cursor: pointer;\n            transform: rotate(180deg);\n            bottom: 18px;\n        }\n    }\n\n    .icon-select-left {\n        display: inline-block;\n        width: 22px;\n        height: 22px;\n        background-image: url(\"../../images/icon_down@2x.png\");\n        background-repeat: no-repeat;\n        background-position: top center;\n        background-size: 100% auto;\n        transform: rotate(270deg);\n    }\n\n    .icon-delete {\n        display: inline-block;\n        width: 22px;\n        height: 22px;\n        background-image: url(\"../../images/icon_del@2x.png\");\n        background-repeat: no-repeat;\n        background-position: top center;\n        background-size: 100% auto;\n    }\n\n    .icon-eye {\n        display: inline-block;\n        width: 20px;\n        height: 20px;\n        background-image: url(\"../../images/icon_eye_close@2x.png\");\n        background-repeat: no-repeat;\n        background-position: top center;\n        background-size: 100% auto;\n    }\n\n    .van-toast > div {\n        color: @white;\n    }\n\n</style>\n"]}]}