{"remainingRequest":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/view/cashier/code.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/src/view/cashier/code.vue","mtime":1552147255271},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/babel-loader/lib/index.js","mtime":1551093966843},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/cache-loader/dist/cjs.js","mtime":1551093967131},{"path":"/Users/shanliguo/Documents/wm-mobile/mobile-vue/node_modules/vue-loader/lib/index.js","mtime":1551093973497}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    Tag,\n    Col,\n    Icon,\n    Cell,\n    CellGroup,\n    Swipe,\n    Toast,\n    SwipeItem,\n    GoodsAction,\n    GoodsActionBigBtn,\n    GoodsActionMiniBtn,\n    Dialog\n} from 'vant';\nimport storeData from './store/index';\nimport QRCode from 'qrcodejs2';\nimport ajax from '@/api/cashier';\n\nexport default {\n    components: {\n        [Tag.name]: Tag,\n        [Col.name]: Col,\n        [Icon.name]: Icon,\n        [Cell.name]: Cell,\n        [CellGroup.name]: CellGroup,\n        [Swipe.name]: Swipe,\n        [SwipeItem.name]: SwipeItem,\n        [GoodsAction.name]: GoodsAction,\n        [GoodsActionBigBtn.name]: GoodsActionBigBtn,\n        [GoodsActionMiniBtn.name]: GoodsActionMiniBtn,\n        QRCode: QRCode,\n        Dialog: Dialog\n    },\n    data() {\n        return Object.assign(storeData.call(this), {\n            amount: undefined,\n            buildingTime: 0,\n            payOrderNo: '',\n            countDownInterval: undefined,\n            countDownCount: 0,\n            queryOrderInterval: undefined,\n            queryOrderCount: 0,\n\n        });\n    },\n    created() {\n        if (this.$route && this.$route.query) {\n            this.codeUrl = this.$route.query;\n            this.payOrderNo = this.$route.query.payOrderNo || '';\n            this.amount = this.$route.query.amount || '';\n            if (Object.keys(this.codeUrl).length === 0) {\n                this.failCodeBuild();\n            } else {\n                this.countDown();\n                this.queryOrder();\n            }\n        }\n        this.codeBuilding();\n        this.$nextTick(function () {\n            this.codeCanvas();\n        });\n    },\n    methods: {\n        codeBuilding() {\n            // Toast.loading({\n            //     mask: true,\n            //     message: '正在创建二维码订单…',\n            //     duration: this.buildingTime,\n            //     className: 'buildingToast'\n            // });\n        },\n        codeCanvas() {\n            let code = new QRCode('code', {\n                width: 235,  // 设置宽度\n                height: 235, // 设置高度\n                text: this.codeUrl.code || ''\n            })\n        },\n        countDown() {\n            let self= this;\n            self.countDownCount = 180;\n            self.countDownInterval = setInterval(() => {\n                self.countDownCount--;\n                if (self.countDownCount > 0) {\n                } else {\n                    self.countDownCount = 0;\n                    self.orderOverTimeAction();\n                    clearInterval(self.countDownInterval);\n                }\n            }, 1000);\n        },\n        queryOrder() {\n            let self = this;\n            let _count = self.queryOrderCount;\n\n                self.queryOrderInterval = setInterval(() => {\n                    _count++;\n\n                    if (_count > 5*30) { // 有效时间 5分钟，5分钟后 同一笔订单失效\n                        _count = 0;\n                        clearInterval(self.queryOrderInterval);\n                    }\n                    queryOrderFetch(_count);\n                }, 2000); // 2s查询一次 收款结果\n\n            function queryOrderFetch(_count) {\n                ajax.queryOrder({\n                    payOrderNo: self.payOrderNo\n                }).then(response => {\n                    if (!response.success === true) {\n                        Toast(response.msg || '收款状态查询失败');\n                        return;\n                    } else {\n                        if (response.data) {\n                            if (response.data.payOrderStatus) {\n                                let payOrderStatus = response.data.payOrderStatus;\n                                if (payOrderStatus === '0' || payOrderStatus === '8') {\n                                    // _count = 0;\n                                    console.log(_count)\n                                    // clearInterval(self.queryOrderInterval);\n                                }\n\n                                // 2 表示支付成功\n                                if (payOrderStatus === '2') {\n                                    _count = 0;\n                                    clearInterval(self.queryOrderInterval);\n                                    setTimeout(() => {\n                                        self.$router.push({\n                                            name: 'cashierSuccess'\n                                        });\n                                    }, 800);\n                                }\n                            }\n                        } else {\n                            Toast(response.msg || '收款状态查询失败');\n                            return;\n                        }\n                    }\n                }).catch(() => {\n                    Toast('收款状态查询失败');\n                    return;\n                });\n            }\n        },\n        orderOverTimeAction() {\n            Dialog.confirm({\n                title: '收款已超时',\n                message: '是否撤销此次交易?',\n                showCancelButton: true,\n                confirmButtonText: '是',\n                cancelButtonText: '否'\n            }).then(() => {\n\n            }).catch(() => {\n            });\n\n            // setTimeout(() => {\n            //     this.$router.push({\n            //         name: 'cashierFailure'\n            //     });\n            // }, 800);\n        },\n        failCodeBuild() {\n            Dialog.confirm({\n                title: '创建二维码订单失败',\n                message: '',\n                showCancelButton: false,\n            }).then(() => {\n\n            }).catch(() => {\n            });\n        },\n        navBackClick() {\n            setTimeout(() => {\n                this.$router.push({\n                    name: 'cashier'\n                });\n            }, 800);\n        }\n    }\n};\n",{"version":3,"sources":["code.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"code.vue","sourceRoot":"src/view/cashier","sourcesContent":["<template>\n    <div>\n        <van-nav-bar\n                class=\"bar-wrapper\"\n                :title=\"this.$route.meta.title\"\n                left-arrow\n                :z-index=\"999\"\n                @click-left=\"navBackClick\"\n        />\n        <div class=\"cashier-wrapper container-wrapper p16\">\n            <div class=\"card\">\n                <div class=\"flex-content flex-content-align plr16\"\n                     :class=\"this.countDownCount ? 'flex-content-spaceBetween': 'flex-content-justify'\">\n                    <div class=\"cashier-account\">收款金额：<strong\n                            v-if=\"this.amount\">￥{{amount|$_filters_moneyFormat_noComma}}</strong></div>\n                    <div class=\"countDown\" v-show=\"this.countDownCount\">倒计时：<strong\n                            class=\"danger\">{{countDownCount}}s</strong></div>\n                </div>\n                <div class=\"cashier-tip mt14\"><i class=\"icon-redPacket\"></i>温馨提示：使用微脉APP扫码支付可使用优惠券哦</div>\n                <div class=\"cashier-code-container\">\n                    <div ref=\"code\" id=\"code\" class=\"flex-content flex-content-justify\"></div>\n                    <div class=\"mt10 font-s-l\">收款成功以POS收银机实际到账为准</div>\n                </div>\n            </div>\n            <div class=\"payType-box\">\n                <ul class=\"payType-box-container\">\n                    <li class=\"payType-item\">\n                        <i class=\"icon-payKind icon-payKind_alipay\"></i>\n                        <div class=\"font-s-l\">支付宝</div>\n                    </li>\n                    <li class=\"payType-item\">\n                        <i class=\"icon-payKind icon-payKind_wechat\"></i>\n                        <div class=\"font-s-l\">微信</div>\n                    </li>\n                    <li class=\"payType-item\">\n                        <i class=\"icon-payKind icon-payKind_wm\"></i>\n                        <div class=\"font-s-l\">微脉</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {\n        Tag,\n        Col,\n        Icon,\n        Cell,\n        CellGroup,\n        Swipe,\n        Toast,\n        SwipeItem,\n        GoodsAction,\n        GoodsActionBigBtn,\n        GoodsActionMiniBtn,\n        Dialog\n    } from 'vant';\n    import storeData from './store/index';\n    import QRCode from 'qrcodejs2';\n    import ajax from '@/api/cashier';\n\n    export default {\n        components: {\n            [Tag.name]: Tag,\n            [Col.name]: Col,\n            [Icon.name]: Icon,\n            [Cell.name]: Cell,\n            [CellGroup.name]: CellGroup,\n            [Swipe.name]: Swipe,\n            [SwipeItem.name]: SwipeItem,\n            [GoodsAction.name]: GoodsAction,\n            [GoodsActionBigBtn.name]: GoodsActionBigBtn,\n            [GoodsActionMiniBtn.name]: GoodsActionMiniBtn,\n            QRCode: QRCode,\n            Dialog: Dialog\n        },\n        data() {\n            return Object.assign(storeData.call(this), {\n                amount: undefined,\n                buildingTime: 0,\n                payOrderNo: '',\n                countDownInterval: undefined,\n                countDownCount: 0,\n                queryOrderInterval: undefined,\n                queryOrderCount: 0,\n\n            });\n        },\n        created() {\n            if (this.$route && this.$route.query) {\n                this.codeUrl = this.$route.query;\n                this.payOrderNo = this.$route.query.payOrderNo || '';\n                this.amount = this.$route.query.amount || '';\n                if (Object.keys(this.codeUrl).length === 0) {\n                    this.failCodeBuild();\n                } else {\n                    this.countDown();\n                    this.queryOrder();\n                }\n            }\n            this.codeBuilding();\n            this.$nextTick(function () {\n                this.codeCanvas();\n            });\n        },\n        methods: {\n            codeBuilding() {\n                // Toast.loading({\n                //     mask: true,\n                //     message: '正在创建二维码订单…',\n                //     duration: this.buildingTime,\n                //     className: 'buildingToast'\n                // });\n            },\n            codeCanvas() {\n                let code = new QRCode('code', {\n                    width: 235,  // 设置宽度\n                    height: 235, // 设置高度\n                    text: this.codeUrl.code || ''\n                })\n            },\n            countDown() {\n                let self= this;\n                self.countDownCount = 180;\n                self.countDownInterval = setInterval(() => {\n                    self.countDownCount--;\n                    if (self.countDownCount > 0) {\n                    } else {\n                        self.countDownCount = 0;\n                        self.orderOverTimeAction();\n                        clearInterval(self.countDownInterval);\n                    }\n                }, 1000);\n            },\n            queryOrder() {\n                let self = this;\n                let _count = self.queryOrderCount;\n\n                    self.queryOrderInterval = setInterval(() => {\n                        _count++;\n\n                        if (_count > 5*30) { // 有效时间 5分钟，5分钟后 同一笔订单失效\n                            _count = 0;\n                            clearInterval(self.queryOrderInterval);\n                        }\n                        queryOrderFetch(_count);\n                    }, 2000); // 2s查询一次 收款结果\n\n                function queryOrderFetch(_count) {\n                    ajax.queryOrder({\n                        payOrderNo: self.payOrderNo\n                    }).then(response => {\n                        if (!response.success === true) {\n                            Toast(response.msg || '收款状态查询失败');\n                            return;\n                        } else {\n                            if (response.data) {\n                                if (response.data.payOrderStatus) {\n                                    let payOrderStatus = response.data.payOrderStatus;\n                                    if (payOrderStatus === '0' || payOrderStatus === '8') {\n                                        // _count = 0;\n                                        console.log(_count)\n                                        // clearInterval(self.queryOrderInterval);\n                                    }\n\n                                    // 2 表示支付成功\n                                    if (payOrderStatus === '2') {\n                                        _count = 0;\n                                        clearInterval(self.queryOrderInterval);\n                                        setTimeout(() => {\n                                            self.$router.push({\n                                                name: 'cashierSuccess'\n                                            });\n                                        }, 800);\n                                    }\n                                }\n                            } else {\n                                Toast(response.msg || '收款状态查询失败');\n                                return;\n                            }\n                        }\n                    }).catch(() => {\n                        Toast('收款状态查询失败');\n                        return;\n                    });\n                }\n            },\n            orderOverTimeAction() {\n                Dialog.confirm({\n                    title: '收款已超时',\n                    message: '是否撤销此次交易?',\n                    showCancelButton: true,\n                    confirmButtonText: '是',\n                    cancelButtonText: '否'\n                }).then(() => {\n\n                }).catch(() => {\n                });\n\n                // setTimeout(() => {\n                //     this.$router.push({\n                //         name: 'cashierFailure'\n                //     });\n                // }, 800);\n            },\n            failCodeBuild() {\n                Dialog.confirm({\n                    title: '创建二维码订单失败',\n                    message: '',\n                    showCancelButton: false,\n                }).then(() => {\n\n                }).catch(() => {\n                });\n            },\n            navBackClick() {\n                setTimeout(() => {\n                    this.$router.push({\n                        name: 'cashier'\n                    });\n                }, 800);\n            }\n        }\n    };\n</script>\n\n<style lang=\"less\" scoped>\n    @import \"../../style/formation.less\";\n\n    .cashier {\n        &-wrapper {\n            .card {\n                padding: 16px 0 18px;\n            }\n            .icon-redPacket {\n                display: inline-block;\n                width: 29px;\n                height: 29px;\n                vertical-align: middle;\n                margin-right: 6px;\n                background-image: url(\"../../images/icon_redPacket@2x.png\");\n                background-repeat: no-repeat;\n                background-position: top center;\n                background-size: 100% auto;\n            }\n            .payType-box {\n                padding-top: 22px;\n                text-align: center;\n                &-container {\n                    display: inline-block;\n                }\n                .payType-item {\n                    display: inline-block;\n                    margin-left: 10vw;\n                    margin-right: 10vw;\n                    .font-s-l {\n                        margin-top: 2px;\n                    }\n                }\n            }\n        }\n        &-account {\n            color: @text-color;\n            font-size: @font-large;\n            line-height: 1.5;\n            text-align: center;\n            strong {\n                font-size: @font-huge;\n                color: @text-color-dark;\n                font-weight: @font-weight_800;\n            }\n        }\n        &-tip {\n            width: 100%;\n            background-color: @yellow;\n            color: @redLight;\n            font-size: @font-smaller;\n            line-height: 1.5;\n            padding: 7px 14px 7px 12px;\n        }\n        &-code-container {\n            padding-left: 45px;\n            padding-right: 45px;\n            text-align: center;\n            margin-top: 30px;\n            img {\n                display: inline-block;\n                width: 100%;\n            }\n        }\n    }\n\n    .countDown {\n        color: @text-color;\n        font-size: @font-small;\n        strong {\n            display: inline-block;\n            text-align: right;\n            width: 30px;\n        }\n    }\n\n</style>\n"]}]}